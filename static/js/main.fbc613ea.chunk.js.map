{"version":3,"sources":["theme/index.js","Components/Page.js","App/Context.js","routes/Login/index.js","Components/Content.js","routes/Home/index.js","Components/HomeLayout/Header.js","Components/HomeLayout/Context.js","Components/HomeLayout/MainContainer.js","Components/HomeLayout/Sidebar.js","Components/HomeLayout/SidebarItem.js","Components/HomeLayout/index.js","routes/ProtectedApp.js","routes/index.js","App/AppProvider.js","Components/LoadingView.js","App/index.js","serviceWorker.js","index.js"],"names":["extendTheme","styles","global","body","fontFamily","color","colors","theme","primary","accent","bg","gray","brand","900","800","700","sidebar","text","secondary","btn","metrics","header","children","rest","style","AppContext","React","createContext","useAppContext","context","useContext","undefined","Error","LoginForm","props","useFormik","initialValues","username","password","onSubmit","values","login","handleChange","handleSubmit","textAlign","pt","minW","src","d","w","alt","as","mt","size","value","className","mb","onChange","name","placeholder","type","leftIcon","Lock","isLoading","loading","loadingText","colorScheme","LoginRoute","history","useHistory","useState","error","data","loginState","setLoginState","setAuthenticated","toast","useToast","useEffect","status","title","description","message","sessionStorage","setItem","access_token","push","useRef","setLoginFailed","h","align","direction","console","log","returnFocusOnClose","isOpen","onClose","placement","closeOnBlur","zIndex","fontWeight","justifyContent","onClick","Content","isFlex","heading","Wrap","Flex","Box","p","Home","Header","fixed","useTheme","positionStyle","position","top","right","left","borderBottom","borderColor","BrandNav","paddingX","alignItems","fontSize","ContainerContext","MainContainer","contextValue","useMemo","Provider","SideBar","borderRight","NavIconButton","icon","fontSizes","aspectRatio","borderRadius","variantsmenu","open","y","opacity","transition","stiffness","velocity","closed","SidebarNavItem","to","opened","chevron","location","useLocation","isActive","matchPath","path","pathname","exact","navicon","isValidElement","RouteLink","Link","li","initial","animate","exit","variants","borderLeft","orange","div","whileHover","x","whileTap","scale","sm","fontWeights","medium","display","padding","paddingLeft","rotate","ChevronRight","SidebarNav","root","toggleOpen","containerRef","ref","o","ul","key","height","staggerChildren","delayChildren","collapsed","duration","staggerDirection","listStyle","Dashboard","flex","overflow","overflowY","removeItem","DashboardRoutes","component","Test","justify","AppRoutes","ProtectedRoute","isAuthenticated","AppRouter","AppProvider","getItem","absolute","bottom","sx","background","Main","Page","App","customTheme","Suspense","fallback","LoadingView","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+OAEeA,cAAY,CACzBC,OAAQ,CACNC,OAAO,CACLC,KAAK,CACHC,WAAW,sBACXC,MAAM,aAIZC,OAAO,2BACFC,IAAMD,QADL,IAIJE,QAAQ,UACRC,OAAO,UACPC,GAAG,CACDC,KAAK,WAEPC,MAAO,CACLC,IAAK,UACLC,IAAK,UACLC,IAAK,WAEPC,QAAS,CACPN,GAAI,WAENO,KAAK,CACHC,UAAU,WAEZC,IAAI,CACFX,QAAQ,aAGZY,QAAQ,CACNJ,QAAQ,IACRK,OAAO,U,iBClCI,cAAmC,IAAhCC,EAA+B,EAA/BA,SAAoBC,GAAW,EAArBC,MAAqB,qCAC/C,OAAO,kBAAC,IAASD,EAAOD,I,uGCHpBG,EAAaC,IAAMC,gBAEVF,IAIR,SAASG,IACZ,IAAMC,EAAUH,IAAMI,WAAWL,GACjC,QAAgBM,IAAZF,EACF,MAAM,IAAIG,MAAM,oDAElB,OAAOH,E,sBC6ELI,EAAY,SAAAC,GAAU,IAAD,EAEoBC,YAAU,CACrDC,cAAc,CACZC,SAAS,GACTC,SAAS,IAEXC,SAAU,SAAAC,GACRN,EAAMO,MAAMD,MANTE,EAFkB,EAElBA,aAAcF,EAFI,EAEJA,OAAQG,EAFJ,EAEIA,aAU7B,OACG,kBAAC,IAAD,CAAKC,UAAU,SAASC,GAAG,OAAOC,KAAK,OACtC,kBAAC,IAAD,CAAOC,IAAI,0BAA0BC,EAAE,eAAeC,EAAE,QAAQC,IAAI,cAAc,6BAElF,kBAAC,IAAD,CAASC,GAAG,KAAKC,GAAG,OAAOC,KAAK,MAAhC,SACA,6BACA,0BAAMd,SAAUI,GACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOW,MAAOd,EAAOH,SAAUkB,UAAU,GAAG7C,GAAG,QAAS2C,KAAK,KAAKG,GAAG,IAAIC,SAAUf,EAAcgB,KAAK,WAAWC,YAAY,aAC7H,kBAAC,IAAD,CAAOF,SAAUf,EAAca,UAAU,GAAG7C,GAAG,QAAS2C,KAAK,KAAKG,GAAG,IAAIF,MAAOd,EAAOF,SAAUoB,KAAK,WAAWE,KAAK,WAAWD,YAAY,aAC7I,kBAAC,IAAD,CAAQE,SAAU,kBAACC,EAAA,EAAD,MAAcC,UAAW7B,EAAM8B,QAAST,UAAU,cAAcU,YAAY,gBAAgBC,YAAY,OAAON,KAAK,UAAtI,oBAOKO,EA/GI,SAACjC,GAClB,IAAMkC,EAAUC,cADY,EAGQC,mBAAS,CAACN,SAAS,EAAOO,MAAO,KAAMC,KAAM,OAHrD,mBAGrBC,EAHqB,KAGTC,EAHS,KAIrBV,EAAwBS,EAAxBT,QAASO,EAAeE,EAAfF,MAAOC,EAAQC,EAARD,KAOhBG,EAAoB/C,IAApB+C,iBAEDC,EAAQC,qBACdC,qBAAU,WACLP,GACDK,EAAM,CACNG,OAAO,QACPC,MAAM,cACNC,YAAY,4BAA4BV,EAAMW,YAGhD,CAACX,EAAOK,IAEVE,qBAAU,WACJN,IACFG,GAAiB,GACjBQ,eAAeC,QAAQ,SAAUZ,EAAK/B,MAAM4C,cAE5CjB,EAAQkB,KAAK,KAEbV,EAAM,CACJG,OAAO,UACPC,MAAM,gBACNC,YAAY,qCAGf,CAACT,EAAMJ,EAASO,EAAkBC,IAEnBlD,IAAM6D,SAAxB,IAEMC,EAAiB,kBAAMd,EAAc,CAACH,MAAO,CAACW,QAAS,iBAAkBV,KAAM,KAAMR,SAAS,KAEpG,OACQ,kBAAC,IAAD,CAAMf,EAAG,OAAQwC,EAAG,QAASlC,UAAU,GAAG7C,GAAG,SAC3C,kBAAC,IAAD,CAAM+E,EAAE,QAAQxC,EAAG,CAAC,OAAQ,OAAQ,OAAQM,UAAU,GAAGmC,MAAM,SAASC,UAAU,UAC9E,kBAAC,EAAD,CAAWlD,MAxCV,SAACD,GACdoD,QAAQC,IAAI,cAAerD,GAC3BkC,EAAc,CAACV,SAAS,EAAMO,MAAO,KAAMC,KAAM,QAsCXR,QAASA,IAEnC,kBAAC,IAAD,CACE8B,oBAAoB,EACpBC,OAAQ/B,EACRgC,QAASR,EACTS,UAAU,QACVC,aAAa,GAEb,kBAAC,IAAD,KAEE,gCAEF,kBAAC,IAAD,CAAgBC,OAAQ,GACtB,kBAAC,IAAD,CAAeC,WAAW,YAA1B,gBACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAepD,EAAE,OAAOqD,eAAe,YACrC,kBAAC,IAAD,CAAahD,KAAK,MAChB,kBAAC,IAAD,CAAQa,YAAY,MAAMoC,QAASd,GAAnC,UACA,kBAAC,IAAD,CAAQtB,YAAY,QAAQoC,QA1B1B,kBAAM5B,EAAc,CAACF,KAAM,CAAC/B,MAAO,CAAC4C,cAAc,IAAQrB,SAAS,EAAOO,MAAO,SA0BnF,gBAMZ,kBAAC,IAAD,CAAMkB,EAAE,QAAQxC,EAAG,CAAC,EAAG,EAAG,OAAQvC,GAAG,UAAU2F,eAAe,UAC5D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOtD,IAAI,0B,iBC9EdwD,EAAU,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,QAASnF,EAAwB,EAAxBA,SAAaC,EAAW,+CAC3DmF,EAAOF,EAASG,IAAOC,IAC7B,OACE,kBAACF,EAAD,eAAMhG,GAAG,QAAQuC,EAAE,OAAOwC,EAAE,OAAOoB,EAAE,QAAWtF,GAC7CkF,EACC,kBAAC,IAAD,CAASpD,KAAK,KAAKG,GAAI,GACpBiD,GAED,KAEHnF,ICAQwF,EARF,SAAC5E,GACZ,OACE,kBAAC,EAAD,CAASxB,GAAG,WAAZ,YCkBWqG,G,OArBA,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAAO1F,EAAwB,EAAxBA,SAAaC,EAAW,oCACzChB,EAAQ0G,qBAEVC,EAAgBF,EAChB,CAAEG,SAAU,QAAShB,OAAQ,IAAKiB,IAAK,EAAIC,MAAO,GAClD,CAACC,KAAK,GACV,OACE,kBAAC,IAAD,eACE7B,EAAGlF,EAAMa,QAAQC,OACjBkG,aAAa,MACfC,YAAY,WACVF,KAAM,CAAC,EAAE,EAAE,EAAE/G,EAAMa,QAAQJ,UACvBO,EALN,CAMEC,MAAO0F,EACPxG,GAAI,UAEHY,KAOMmG,EAAW,SAACvF,GACvB,IAAM3B,EAAQ0G,qBACd,OACE,kBAAC,IAAD,CACES,SAAU,GACV/B,UAAU,SACVgC,WAAW,SACXtB,eAAe,SACfZ,EAAGlF,EAAMa,QAAQC,QAEjB,kBAAC,IAAD,CAAShB,MAAM,WAAWuH,SAAS,MAAnC,aCnCAC,EAAmBnG,IAAMC,gBAChBkG,ICaAC,EAZO,SAAC5F,GACrB,IAAM6F,EAAeC,mBAAQ,iBAAO,KAAK,IAEzC,OACE,kBAAC,EAAiBC,SAAlB,CAA2B3E,MAAOyE,GAChC,kBAAC,IAAD,CAAM9E,EAAG,OAAQwC,EAAG,QAAS/E,GAAI,WAC9BwB,EAAMZ,Y,SCUA4G,G,OAhBC,SAAChG,GACf,IAAM3B,EAAQ0G,qBACd,OACE,kBAAC,IAAD,CACEtB,UAAU,SACV1C,EAAG,CAAC,EAAG,EAAG,EAAG1C,EAAMa,QAAQJ,SAC3ByE,EAAG,QACH0C,YAAY,MACdX,YAAY,WACV9G,GAAI,SAEHwB,EAAMZ,YAWA8G,EAAgB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAS9G,EAAW,wBAC5ChB,EAAQ0G,qBAEd,OACE,kBAAC,IAAD,eACExB,EAAGlF,EAAMa,QAAQC,OACjB4B,EAAG1C,EAAMa,QAAQC,OACjBhB,MAAO,WACPuH,SAAUrH,EAAM+H,UAAN,GACV9G,MAAO,CAAE+G,YAAa,EAAGC,aAAc,GACvC9H,GAAI,cACJ2H,KAAMA,GACF9G,K,iBC9BJkH,EAAe,CACnBC,KAAM,CACJC,EAAG,EACHC,QAAS,EACTC,WAAY,CACVF,EAAG,CAAEG,UAAW,IAAMC,UAAW,OAGrCC,OAAQ,CACNL,GAAI,GACJC,QAAS,EACTC,WAAY,CACVF,EAAG,CAAEG,UAAW,QAKTG,EAAiB,SAAC,GAA0C,IAAxCZ,EAAuC,EAAvCA,KAAMrD,EAAiC,EAAjCA,MAAOkE,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAClD7I,EAAQ0G,qBAERoC,EAAWC,cACXC,EAAWC,YAAUN,EAAI,CAAEO,KAAMJ,EAASK,SAAUC,OAAO,IAG3DC,EACY,oBAATvB,EACHA,IACA3G,IAAMmI,eAAexB,GACrBA,OACAtG,EAEA+H,EAAYZ,EAAKa,IAAO,IAC9B,OACE,kBAAC,IAAOC,GAAR,CACEC,QAAQ,SACRC,QAAQ,OACRC,KAAK,SACLC,SAAU3B,EACVjH,MAAO,CACL6I,WAAYd,GAAQ,oBAAiBhJ,EAAMD,OAAOgK,OAAO,MACzDjK,MAAQE,EAAMD,OAAOK,KAAK,OAQ5B,kBAAC,IAAO4J,IAAR,CACEC,WAAY,CACVC,EAAG,EACHpK,MAAO,SAETqK,SAAU,CAAEC,MAAO,MAEnB,kBAACb,EAAD,CACEtI,MAAO,CACLoG,SAAUrH,EAAM+H,UAAUsC,GAC1BxE,WAAY7F,EAAMsK,YAAYC,OAC9BC,QAAS,OACTpD,WAAY,SACZtB,eAAgB,gBAChB2E,QAAS,GACTC,YAAa,IAEf/B,GAAIA,GAEJ,kBAAC,IAAD,CAAMvB,WAAW,SAASvB,WAAYmD,EAAW,OAAQ,MAAO3B,SAAS,MACvE,kBAAC,IAAD,CAAK3E,EAAG,GAAI2G,GACX5E,GAEFoE,EACC,kBAAC,IAAOmB,IAAR,CAAYL,QAAS,CAAEgB,OAAQ/B,EAAS,GAAK,IAC7C,kBAACgC,EAAA,EAAD,OAGE,SASDC,EAAa,SAAC,GAAqC,IAAnC9J,EAAkC,EAAlCA,SAAU+G,EAAwB,EAAxBA,KAAMrD,EAAkB,EAAlBA,MAAkB,KAAXqG,KACrB/G,oBAASU,IADuB,mBACtDe,EADsD,KAC9CuF,EAD8C,KAEvDC,EAAehG,iBAAO,MAG5B,OACE,yBAAKiG,IAAKD,GACPvG,EACC,yBAAKsB,QAAS,kBAAMgF,GAAW,SAACG,GAAD,OAAQA,OACrC,kBAAC,EAAD,CAAgBpD,KAAMA,EAAMc,OAAQpD,EAAQqD,SAAO,EAACpE,MAAOA,KAE3D,KAEJ,kBAAC,IAAD,CAAiBiF,SAASjF,GACvBe,EACC,kBAAC,IAAO2F,GAAR,CACEC,IAAI,UACJ1B,QAAQ,YACRC,QAAQ,OACRC,KAAK,YACLC,SAAU,CACR1B,KAAM,CACJE,QAAS,EACTgD,OAAQ,OACR/C,WAAY,CAAEgD,gBAAiB,IAAMC,cAAe,KAEtDC,UAAW,CACTnD,QAAS,EACTgD,OAAQ,EACR/C,WAAY,CACVmD,SAAU,GACVH,gBAAiB,IACjBI,kBAAmB,KAIzBpD,WAAY,CAAEmD,SAAU,IACxBxK,MAAO,CAAEyJ,YAAajG,EAAQ,GAAK,EAAGkH,UAAW,SAEhD5K,GAED,QC7FG6K,EA7BG,SAACjK,GAEf,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KAEE,kBAAC,IAAD,CAAMkK,KAAM,EAAGvJ,GAAI,GAAIwJ,SAAS,QAC9B,kBAAC,IAAD,CAAKpJ,EAAG,QACN,kBAAC,EAAD,CAAYoI,MAAI,EAAC3K,GAAG,SAClB,kBAAC,EAAD,CAAgBsE,MAAM,OAAOkE,GAAG,IAAIb,KAAM,kBAAC,IAAD,QAC1C,kBAAC,EAAD,CACErD,MAAM,QACNkE,GAAG,SACHb,KAAM,kBAAC,IAAD,QAER,kBAAC,EAAD,CACErD,MAAM,QACNkE,GAAG,SACHb,KAAM,kBAAC,IAAD,YAMhB,kBAAC,EAAD,QAOF9B,EAAU,SAACrE,GAAW,IACjByC,EAAoB/C,IAApB+C,iBAOCpE,EAAQ0G,qBAEd,OACE,kBAAC,IAAD,CAAKmF,KAAM,EAAGE,UAAU,QACtB,kBAAC,EAAD,CAAQtF,OAAK,EAACX,eAAe,gBAAgBsB,WAAW,UACtD,kBAAC,IAAD,CAAMtB,eAAe,gBAAgBpD,EAAE,QACrC,kBAAC,IAAD,KACA,kBAAC,EAAD,OAEA,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAeoF,KAAM,kBAAC,IAAD,CAAiBT,SAAS,OAAOvH,MAAM,YAAaiG,QAfnE,WACd3B,GAAiB,GACjBQ,eAAeoH,WAAW,gBAiBxB,kBAAC,IAAD,CAAMH,KAAM,EAAGvJ,GAAItC,EAAMa,QAAQC,QAC/B,kBAAC,EAAD,SAMFmL,EAAkB,WACtB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO7C,OAAK,EAACF,KAAK,IAAIgD,UAAW3F,IACjC,kBAAC,IAAD,CAAO6C,OAAK,EAACF,KAAK,SAASgD,UAAWC,KACtC,kBAAC,IAAD,CAAO/C,OAAK,EAACF,KAAK,SAASgD,UAAWC,OAOtCA,GAAO,SAACxK,GACZ,OACE,kBAAC,IAAD,CAAMkK,KAAM,EAAGvF,EAAG,GAAI8F,QAAQ,gBAAgBjM,GAAI,QAAS+E,EAAE,SAC3D,kBAAC,IAAD,KACE,kDC1EGmH,GATG,SAAA1K,GAEhB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuH,KAAK,IAAIgD,UAAWN,MCe3BU,GAAiB,SAAC3K,GAEtB,OXTkBN,IAEDkL,gBWQf,kBAAC,IAAU5K,GAEX,kBAAC,IAAD,CAAUgH,GAAI,YAIH6D,GApBG,SAAC7K,GACjB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuH,KAAK,SAASgD,UAAWtI,IAChC,kBAAC,GAAD,CAAgBsF,KAAK,IAAIgD,UAAWG,QCf/BI,GAAc,SAAC,GAAgB,IAAf1L,EAAc,EAAdA,SAAc,EACKgD,oBAAS,WAEjD,QADca,eAAe8H,QAAQ,aAFF,mBAChCH,EADgC,KACfnI,EADe,KAMjCrB,EAAQ0E,mBAAQ,iBAAM,CACxB8E,kBACAnI,sBACD,CAACmI,IAGJ,OACI,kBAAC,EAAW7E,SAAZ,CAAqB3E,MAAOA,GACxBhC,I,UCZI,eAAuC,IAAD,IAApC4D,eAAoC,MAA5B,aAA4B,EAAdgI,EAAc,EAAdA,SACpC,OACI,kBAAC,IAAD,CAAM/G,OAAQ,MAAO3E,MAAO0L,EAAW,CACnC/F,SAAS,WACTC,IAAI,EACJ+F,OAAO,EACP7F,KAAK,EACLD,MAAM,GACN,GAAI1B,UAAU,SAASyH,GAAI,CAACC,WAAW,yBAA0BpK,EAAE,OAAOwC,EAAE,QAAQY,eAAe,SAASsB,WAAW,UAC3H,kBAAC,IAAD,CAAStE,KAAK,MAAM6B,GACpB,kBAAC,KAAD,CAAS9B,GAAI,EAAGC,KAAK,SCL7B,SAASiK,KACP,OACE,kBAACC,EAAD,CAAM7M,GAAG,YACP,kBAAC,GAAD,OAmBS8M,OAdf,WACE,OACE,kBAAC,IAAD,CAAgBjN,MAAOkN,GACnB,kBAAC,IAAMC,SAAP,CAAgBC,SAAW,kBAACC,GAAD,OACvB,kBAAC,GAAD,KACA,kBAACN,GAAD,UCXQO,QACW,cAA7BC,OAAOzE,SAAS0E,UAEe,UAA7BD,OAAOzE,SAAS0E,UAEhBD,OAAOzE,SAAS0E,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.fbc613ea.chunk.js","sourcesContent":["import { theme, extendTheme } from \"@chakra-ui/core\";\r\n\r\nexport default extendTheme({\r\n  styles :{\r\n    global:{\r\n      body:{\r\n        fontFamily:\"'Lato', sans-serif;\",\r\n        color:'#2A2D30'\r\n      }\r\n    }\r\n  },\r\n  colors: {\r\n    ...theme.colors,\r\n    // Go to https://smart-swatch.netlify.com/ to easily generate a new color\r\n    // palette.\r\n    primary:\"#318E86\",\r\n    accent:\"#ED7737\",\r\n    bg:{\r\n      gray:\"#F7F6F4\"\r\n    },\r\n    brand: {\r\n      900: \"#1a365d\",\r\n      800: \"#153e75\",\r\n      700: \"#2a69ac\",\r\n    },\r\n    sidebar: {\r\n      bg: \"#2a3b50\",\r\n    },\r\n    text:{\r\n      secondary:\"#b7b7b7\"\r\n    },\r\n    btn:{\r\n      primary:\"#3B76FB\"\r\n    }\r\n  },\r\n  metrics:{\r\n    sidebar:200,\r\n    header:\"10vh\",\r\n  }\r\n\r\n})\r\n","import React from \"react\";\nimport { Flex } from \"@chakra-ui/core\";\n\nexport default ({ children, style, ...rest }) => {\n  return <Flex {...rest}>{children}</Flex>;\n};\n","import React from 'react'\nconst AppContext = React.createContext()\n\nexport default AppContext\n\n\n\nexport function useAppContext() {\n    const context = React.useContext(AppContext);\n    if (context === undefined) {\n      throw new Error('useAppContext must be used within an AppProvider');\n    }\n    return context;\n  }\n\n  export function useIsAuthenticated() {\n    \n    const context = useAppContext();\n    // console.log(\"isauthenticated\", context);\n    return context.isAuthenticated;\n  }","import React, { useEffect, useState } from \"react\";\nimport { Heading, Stack, useTheme, Box, Button, useToast, Flex, Input, Image, Popover, PopoverTrigger, PopoverContent, PopoverHeader, PopoverArrow, PopoverCloseButton, PopoverFooter, ButtonGroup } from \"@chakra-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAppContext } from \"../../App/Context\";\nimport { useFormik } from \"formik\";\nimport { LockIcon } from \"@chakra-ui/icons\";\n\nconst LoginRoute = (props) => {\n  const history = useHistory();\n\n  const [loginState, setLoginState] = useState({loading: false, error: null, data: null})\n  const {loading, error, data} = loginState;\n  \n  const _login = (values) => {\n    console.log(\"login click\", values);\n    setLoginState({loading: true, error: null, data: null});\n  };\n\n  const {setAuthenticated} = useAppContext()\n\n  const toast = useToast()\n  useEffect(()=> {\n    if(error){\n      toast({\n      status:'error',\n      title:\"Error login\",\n      description:'You are not authorized - '+error.message\n    })\n    }\n  },[error, toast])\n\n  useEffect(() => {\n    if (data) {\n      setAuthenticated(true)\n      sessionStorage.setItem(\"@login\", data.login.access_token)\n\n      history.push(\"/\");\n\n      toast({\n        status:'success',\n        title:\"Login success\",\n        description:'You are successfully loggedIn'\n      })\n    }\n  }, [data, history, setAuthenticated, toast]);\n\n  const cancelRef = React.useRef();\n  const setLoginSuccess = () => setLoginState({data: {login: {access_token: true}}, loading: false, error: null })\n  const setLoginFailed = () => setLoginState({error: {message: 'Login Failed!'}, data: null, loading: false })\n\n  return (\n          <Flex w={\"100%\"} h={\"100vh\"} className='' bg='white' >\n            <Flex h=\"100vh\" w={[\"100%\", \"100%\", '50%']} className='' align='center' direction='column'>  \n                <LoginForm login={_login} loading={loading}/>\n\n                <Popover\n                  returnFocusOnClose={false}\n                  isOpen={loading}\n                  onClose={setLoginFailed}\n                  placement=\"right\"\n                  closeOnBlur={false}\n                >\n                  <PopoverTrigger>\n                    {/* <Button variantColor=\"pink\">Popover Target</Button> */}\n                    <span></span>\n                  </PopoverTrigger>\n                  <PopoverContent zIndex={4}>\n                    <PopoverHeader fontWeight=\"semibold\">Login Action</PopoverHeader>\n                    <PopoverArrow />\n                    <PopoverCloseButton />\n                    <PopoverFooter d=\"flex\" justifyContent=\"flex-end\">\n                      <ButtonGroup size=\"sm\">\n                        <Button colorScheme=\"red\" onClick={setLoginFailed}>Failed</Button>\n                        <Button colorScheme=\"green\" onClick={setLoginSuccess}>Success</Button>\n                      </ButtonGroup>\n                    </PopoverFooter>\n                  </PopoverContent>\n                </Popover>\n            </Flex>\n            <Flex h=\"100vh\" w={[0, 0, '50%']} bg='#e6f2ff' justifyContent='center'>\n              <Box>\n                <Image src='/images/login.jpg'/>\n              </Box>\n            </Flex>\n                \n          </Flex>\n  );\n};\n\nconst LoginForm = props => {\n\n  const {handleChange, values, handleSubmit} = useFormik({\n    initialValues:{\n      username:'',\n      password:''\n    },\n    onSubmit: values => {\n      props.login(values)\n    },\n  });\n\n  return(\n     <Box textAlign=\"center\" pt='60px' minW='50%'>\n      <Image src=\"/images/logogeneric.png\" d='inline-block' w='300px' alt=\"Your Logo\" /><br/>\n      \n      <Heading as=\"h4\" mt='50px' size=\"lg\">Login</Heading>\n      <br/>\n      <form onSubmit={handleSubmit}>\n        <Stack>\n          <Input value={values.username} className='' bg='white'  size='lg' mb='4' onChange={handleChange} name='username' placeholder=\"Username\" />\n          <Input onChange={handleChange} className='' bg='white'  size='lg' mb='4' value={values.password} name='password' type='password' placeholder=\"Password\" />\n          <Button leftIcon={<LockIcon />} isLoading={props.loading} className='inputShadow' loadingText='Logging in...' colorScheme=\"blue\" type='submit'>Secure Login</Button>\n        </Stack>\n      </form>\n    </Box>  \n  )\n}\n\nexport default LoginRoute;\n","import React from \"react\";\nimport { Box, Flex, Heading } from \"@chakra-ui/core\";\n\nexport const Content = ({ isFlex, heading, children, ...rest }) => {\n  const Wrap = isFlex ? Flex : Box;\n  return (\n    <Wrap bg=\"white\" w=\"100%\" h=\"90vh\" p=\"20px\" {...rest}>\n      {heading ? (\n        <Heading size=\"lg\" mb={1}>\n          {heading}\n        </Heading>\n      ) : null}\n\n      {children}\n    </Wrap>\n  );\n};\n","import React from \"react\";\nimport { Content } from \"../../Components/Content\";\n\n\n\nconst Home = (props) => {\n  return (\n    <Content bg=\"gray.50\">\n      Namaste\n    </Content>\n  );\n};\n\nexport default Home;","import React from \"react\";\nimport { Flex, Heading, Box, useTheme } from \"@chakra-ui/core\";\nimport Color from \"color\";\n\nconst Header = ({ fixed, children, ...rest }) => {\n  const theme = useTheme();\n\n  let positionStyle = fixed\n    ? { position: \"fixed\", zIndex: 100, top: 0,  right: 0 }\n    : {left:0};\n  return (\n    <Flex\n      h={theme.metrics.header}\n      borderBottom=\"1px\"\n    borderColor=\"gray.200\"\n      left={[0,0,0,theme.metrics.sidebar]}\n      {...rest}\n      style={positionStyle}\n      bg={'white'}\n    >\n      {children}\n    </Flex>\n  );\n};\n\nexport default Header;\n\nexport const BrandNav = (props) => {\n  const theme = useTheme()\n  return (\n    <Flex\n      paddingX={10}\n      direction=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      h={theme.metrics.header}\n    >\n      <Heading color=\"gray.700\" fontSize=\"xl\">Welcome</Heading>\n    </Flex>\n  );\n};\n","import React, { useContext } from \"react\";\n\nconst ContainerContext = React.createContext();\nexport default ContainerContext;\n\nexport const useAppContainer = () => {\n  const app = useContext(ContainerContext);\n  return app;\n};\n","import React, { useMemo, useState } from \"react\";\nimport { Box, Flex } from \"@chakra-ui/core\";\nimport ContainerContext from \"./Context\";\n\nconst MainContainer = (props) => {\n  const contextValue = useMemo(() => ({}), []);\n\n  return (\n    <ContainerContext.Provider value={contextValue}>\n      <Flex w={\"100%\"} h={\"100vh\"} bg={\"gray.50\"}>\n        {props.children}\n      </Flex>\n    </ContainerContext.Provider>\n  );\n};\n\nexport default MainContainer;\n","import React from \"react\";\nimport { Box, Flex, Heading, IconButton, useTheme } from \"@chakra-ui/core\";\nimport {ArrowRightIcon} from '@chakra-ui/icons'\n\nconst SideBar = (props) => {\n  const theme = useTheme();  \n  return (\n    <Flex\n      direction=\"column\"\n      w={[0, 0, 0, theme.metrics.sidebar]}\n      h={\"100vh\"}\n      borderRight=\"1px\"\n    borderColor=\"gray.200\"\n      bg={\"white\"}\n    >\n      {props.children}\n    </Flex>\n  );\n};\n\nexport default SideBar;\n\nexport const SidebarToggleBtn = (props) => {\n  return <NavIconButton icon={<ArrowRightIcon/>} />;\n};\n\nexport const NavIconButton = ({ icon, ...rest }) => {\n  const theme = useTheme();\n\n  return (\n    <IconButton\n      h={theme.metrics.header}\n      w={theme.metrics.header}\n      color={\"gray.400\"}\n      fontSize={theme.fontSizes[\"xl\"]}\n      style={{ aspectRatio: 1, borderRadius: 0 }}\n      bg={\"transparent\"}\n      icon={icon}\n      {...rest}\n    />\n  );\n};\n\n\n//example sidebar\n// return (\n//   <MainContainer>\n//     <SideBar>\n//       <BrandNav />\n\n//       <Flex flex={1} overflow=\"auto\">\n//         <Box w={\"100%\"}>\n//           <SidebarNav root bg='white'>\n//             <SidebarNavItem title=\"Home\" to=\"/\" icon={<Fa500Px />} />\n//             <SidebarNavItem\n//               title=\"Profile\"\n//               to=\"/route2\"\n//               icon={<FaRegGrinWink />}\n//             />\n//             <SidebarNavItem\n//               title=\"Components\"\n//               to=\"/route3\"\n//               icon={<FaRegGrinTongue />}\n//             />\n\n//             <SidebarNav title={\"Group 1\"} icon={<FaRegGem />}>\n//               <SidebarNavItem\n//                 title=\"sRoute 1\"\n//                 to=\"/route4\"\n//                 icon={<FaRegHandPeace />}\n//               />\n//               <SidebarNavItem title=\"sRoute 2\" icon={<FaRegHeart />} />\n//               <SidebarNavItem title=\"sRoute 3\" icon={<FaRegSnowflake />} />\n\n//               <SidebarNav title={\"Sub Group 1\"} icon={<FaRegCommentDots />}>\n//                 <SidebarNavItem title=\"ssRoute 1\" icon={<FaCrosshairs />} />\n//                 <SidebarNavItem title=\"ssRoute 2\" icon={<FaCrosshairs />} />\n//                 <SidebarNavItem title=\"ssRoute 3\" icon={<FaCrosshairs />} />\n//               </SidebarNav>\n//             </SidebarNav>\n//           </SidebarNav>\n//         </Box>\n//       </Flex>\n//     </SideBar>\n//     <Content />\n//   </MainContainer>\n// );","import React, { useState, useRef } from \"react\";\nimport { motion, useCycle, AnimatePresence } from \"framer-motion\";\nimport { useTheme, PseudoBox, Flex, Box } from \"@chakra-ui/core\";\nimport Color from \"color\";\nimport { Link, useLocation, matchPath } from \"react-router-dom\";\nimport {ChevronRightIcon} from '@chakra-ui/icons'\n\n\nconst variantsmenu = {\n  open: {\n    y: 0,\n    opacity: 1,\n    transition: {\n      y: { stiffness: 1000, velocity: -100 },\n    },\n  },\n  closed: {\n    y: -20,\n    opacity: 0,\n    transition: {\n      y: { stiffness: 1000 },\n    },\n  },\n};\n\nexport const SidebarNavItem = ({ icon, title, to, opened, chevron }) => {\n  const theme = useTheme();\n  // const sidebarcolor = theme.colors.sidebar.bg;\n  const location = useLocation();\n  const isActive = matchPath(to, { path: location.pathname, exact: true });\n\n\n  const navicon =\n    typeof icon === \"function\"\n      ? icon()\n      : React.isValidElement(icon)\n      ? icon\n      : undefined;\n\n  const RouteLink = to ? Link : \"a\";\n  return (\n    <motion.li\n      initial=\"closed\"\n      animate=\"open\"\n      exit=\"closed\"\n      variants={variantsmenu}\n      style={{\n        borderLeft: isActive && `3px solid ${theme.colors.orange[300]}`,\n        color:  theme.colors.gray[800],\n        //backgroundColor: opened\n        //  ? Color(sidebarcolor).darken(0.2).hex()\n        //  : isActive\n        //  ? Color(sidebarcolor).darken(0.6).hex()\n        //  : sidebarcolor,\n      }}\n    >\n      <motion.div\n        whileHover={{\n          x: 3,\n          color: 'black'\n        }}\n        whileTap={{ scale: 0.99 }}\n      >\n        <RouteLink\n          style={{\n            fontSize: theme.fontSizes.sm,\n            fontWeight: theme.fontWeights.medium,\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            padding: 10,\n            paddingLeft: 20,\n          }}\n          to={to}\n        >\n          <Flex alignItems=\"center\" fontWeight={isActive ? \"bold\" :\"400\"} fontSize=\"md\">\n            <Box w={8}>{navicon}</Box>\n            {title}\n          </Flex>\n          {chevron ? (\n            <motion.div animate={{ rotate: opened ? 90 : 0 }}>\n            <ChevronRightIcon/>\n\n</motion.div>\n          ) : null}\n        </RouteLink>\n        {/* <Text userSelect=\"none\">{title}</Text> */}\n        {/* used for list header */}\n      </motion.div>\n    </motion.li>\n  );\n};\n\nexport const SidebarNav = ({ children, icon, title, root }) => {\n  const [isOpen, toggleOpen] = useState(title ? false : true);\n  const containerRef = useRef(null);\n  // const { height } = useDimensions(containerRef);\n\n  return (\n    <nav ref={containerRef}>\n      {title ? (\n        <div onClick={() => toggleOpen((o) => (o ? false : true))}>\n          <SidebarNavItem icon={icon} opened={isOpen} chevron title={title} />\n        </div>\n      ) : null}\n\n      <AnimatePresence initial={title ? false : true}>\n        {isOpen ? (\n          <motion.ul\n            key=\"content\"\n            initial=\"collapsed\"\n            animate=\"open\"\n            exit=\"collapsed\"\n            variants={{\n              open: {\n                opacity: 1,\n                height: \"auto\",\n                transition: { staggerChildren: 0.07, delayChildren: 0.2 },\n              },\n              collapsed: {\n                opacity: 0,\n                height: 0,\n                transition: {\n                  duration: 0.3,\n                  staggerChildren: 0.05,\n                  staggerDirection: -1,\n                },\n              },\n            }}\n            transition={{ duration: 0.3 }}\n            style={{ paddingLeft: title ? 10 : 5, listStyle: \"none\" }}\n          >\n            {children}\n          </motion.ul>\n        ) : null}\n      </AnimatePresence>\n    </nav>\n  );\n};\n","import { Box, Flex, Stack, useTheme } from \"@chakra-ui/core\";\nimport React, { useEffect } from \"react\";\nimport { AiOutlineLogout } from \"react-icons/ai\";\nimport { Fa500Px, FaRegGrinTongue, FaRegGrinWink } from \"react-icons/fa\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { useAppContext } from \"../../App/Context\";\nimport Home from \"../../routes/Home\";\nimport Header, { BrandNav } from \"./Header\";\nimport MainContainer from \"./MainContainer\";\nimport SideBar, { NavIconButton } from \"./Sidebar\";\nimport { SidebarNav, SidebarNavItem } from \"./SidebarItem\";\n\nconst Dashboard = (props) => {\n\n    return (\n      <MainContainer>\n        <SideBar>\n  \n          <Flex flex={1} pt={20} overflow=\"auto\">\n            <Box w={\"100%\"}>\n              <SidebarNav root bg='white'>\n                <SidebarNavItem title=\"Home\" to=\"/\" icon={<Fa500Px />} />\n                <SidebarNavItem\n                  title=\"Item1\"\n                  to=\"/item1\"\n                  icon={<FaRegGrinTongue />}\n                />\n                <SidebarNavItem\n                  title=\"Item2\"\n                  to=\"/item2\"\n                  icon={<FaRegGrinWink />}\n                />\n              </SidebarNav>\n            </Box>\n          </Flex>\n        </SideBar>\n        <Content/>\n      </MainContainer>\n    );\n};\n\nexport default Dashboard\n\nconst Content = (props) => {\n    const {setAuthenticated} = useAppContext()\n    \n      const _logout = () => {\n        setAuthenticated(false)\n        sessionStorage.removeItem('@login')\n      };\n    \n      const theme = useTheme()\n    \n      return (\n        <Box flex={1} overflowY=\"auto\">\n          <Header fixed justifyContent=\"space-between\" alignItems=\"center\">\n            <Flex justifyContent='space-between' w='100%'>\n              <Box >\n              <BrandNav />\n              </Box>\n              <Box>\n                <NavIconButton icon={<AiOutlineLogout fontSize='30px' color='#5DADE2'/>} onClick={_logout} />\n              </Box>\n            </Flex>\n          </Header>\n          <Flex flex={1} pt={theme.metrics.header}>\n            <DashboardRoutes/>\n          </Flex>\n        </Box>\n      );\n    };\n    \n    const DashboardRoutes = () => {\n      return (\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/item1\" component={Test} />\n          <Route exact path=\"/item2\" component={Test} />\n        </Switch>\n      );\n    };\n    \n    \n    \n    const Test = (props) => {\n      return (\n        <Flex flex={1} p={10} justify=\"space-between\" bg={'white'} h=\"200vh\">\n          <Stack>\n            <div>Test Component</div>\n          </Stack>\n        </Flex>\n      );\n    };","import React from \"react\";\nimport {  Switch, Route } from \"react-router-dom\";\nimport Dashboard from \"../Components/HomeLayout\";\n\n\nconst AppRoutes = props => {\n\n  return (\n    <Switch>\n      <Route path=\"/\" component={Dashboard} />\n    </Switch>\n  )\n}\n\nexport default AppRoutes;\n\n","import React, { useEffect } from \"react\";\n\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport LoginRoute from \"./Login\";\nimport { useIsAuthenticated } from \"../App/Context\";\nimport AppRoutes from \"./ProtectedApp\";\n\nconst AppRouter = (props) => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/login\" component={LoginRoute} />\n        <ProtectedRoute path=\"/\" component={AppRoutes} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nconst ProtectedRoute = (props) => {\n  const auth = useIsAuthenticated()  \n  return auth ? (\n    <Route {...props}  />\n  ) : (\n    <Redirect to={\"/login\"} />\n  );\n};\n\nexport default AppRouter;\n","import React, { useMemo, useState } from 'react'\nimport AppContext from \"./Context\"\n\nexport const AppProvider = ({children}) => {    \n    const [isAuthenticated, setAuthenticated] = useState(()=> {\n        let isvalue = sessionStorage.getItem(\"@login\")\n        return isvalue ? true : false\n    })\n\n    const value = useMemo(()=> ({\n        isAuthenticated,\n        setAuthenticated\n    }),[isAuthenticated])\n    \n\n    return (\n        <AppContext.Provider value={value}>\n           {children}\n        </AppContext.Provider>\n    )\n}","import React from 'react'\nimport { Flex, Heading, Spinner } from '@chakra-ui/core'\n\n\n\nexport default  ({message=\"Loading...\", absolute}) => {\n    return (\n        <Flex zIndex={99999} style={absolute ? {\n            position:'absolute',\n            top:0,\n            bottom:0,\n            left:0,\n            right:0,\n        } : {}} direction=\"column\" sx={{background:'rgba(255,255,255,0.5)'}} w=\"100%\" h=\"100vh\" justifyContent=\"center\" alignItems='center'>\n        <Heading size=\"sm\">{message}</Heading>\n        <Spinner mt={4} size=\"lg\" />\n\n      </Flex>\n    )\n}","import React from \"react\";\n\nimport { ChakraProvider } from \"@chakra-ui/core\";\nimport customTheme from \"../theme\";\nimport Page from \"../Components/Page\";\nimport AppRouter from \"../routes\";\nimport { AppProvider } from \"./AppProvider.js\";\nimport LoadingView from \"../Components/LoadingView.js\";\n\n\nfunction Main() {\n  return (\n    <Page bg=\"gray.900\">\n      <AppRouter />\n    </Page>\n  );\n}\n\nfunction App() {\n  return (\n    <ChakraProvider theme={customTheme}>\n        <React.Suspense fallback={ <LoadingView/> }>\n            <AppProvider>\n            <Main />\n            </AppProvider>\n        </React.Suspense>\n    </ChakraProvider>\n\n \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}